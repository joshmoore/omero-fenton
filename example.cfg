[main]
botname = slack-logbot
token =
channel = #logbots

# Log reporting options, can be overridden in individual log configs

# Rate limit: rate_limit_n messages per rate_limit_t seconds, per log file
rate_limit_t = 60
rate_limit_n = 4
# Truncate log messages to this length
max_log_length = 1024
# Notify these log levels
levels = WARN,ERROR,FATAL

# Disk space warnings
[diskmonitor /]
path = /
warn_mb = 10240,5120,2048,1024,512,0
hysteresis_mb = 512

# Log file email alerts
[emailalerts out-of-memory]
conditions = [('', '', 'out\s*of\s*memory')]
delay = 120
interval = 3600
smtp = localhost
email_from = from@example.org
email_to = a@example.org b@example.org
email_subject = [logbot] Out of memory detected

# Log files to be monitored

[logdefault example-server Blitz-0]
file = log/Blitz-0.log

[logdefault example-server Dropbox-0]
file = log/DropBox.log

[logdefault example-server FileServer]
file = log/FileServer.log

[logdefault example-server Indexer-0]
file = log/Indexer-0.log

[logdefault example-server MonitorServer]
file = log/MonitorServer.log

[logdefault example-server OMEROweb]
file = log/OMEROweb.log

[logdefault example-server OMEROweb_request]
file = log/OMEROweb_request.log
levels = WARNI,ERROR,FATAL

[logdefault example-server PixelData-0]
file = log/PixelData-0.log

[logdefault example-server Processor-0]
file = log/Processor-0.log

[logdefault example-server Tables-0]
file = log/Tables-0.log

[logall example-server master-err]
file = log/master.err

[logall example-server master-out]
file = log/master.out

#[logdatelevel example-server jenkins.log]
#file = log/jenkins.log
#levels = WARNING,SEVERE
